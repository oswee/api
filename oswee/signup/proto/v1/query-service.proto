
syntax = "proto3";
package oswee.signup.service.query.v1;
option go_package = "oswee/signup/stubs/v1";

// import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
// import "protoc-gen-swagger/options/openapiv2.proto";
import "protoc-gen-swagger/options/annotations.proto";

// import "github.com.oswee/api/signup/proto/v1/signup.proto";
import "oswee/signup/proto/v1/signup.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "Oswee Signup Query Service API";
		version: "1.0.0";
		description: "The greatest API ever!";
		contact: {
			name: "Oswee";
			url: "https://github.com/oswee";
			email: "dzintars.klavins@gmail.com";
		};
		license: {
			name: "BSD 3-Clause License";
			url: "https://github.com/oswee/api/blob/master/LICENSE.txt";
		};
	};
	external_docs: {
		url: "https://github.com/oswee/api";
		description: "More about Oswee";
	};
	host: "api.oswee.com";
	schemes: HTTPS;
	schemes: WSS;
    consumes: "application/json";
	produces: "application/json";
	responses: {
		key: "403";
		value: {
			description: "Returned when the user does not have permission to access the resource.";
		}
	}
    responses: {
		key: "404";
		value: {
			description: "Returned when the resource does not exist.";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
	};
};

service SignupQueryService {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_tag) = {
		description: "ABitOfEverythingService description -- which should not be used in place of the documentation comment!"
		external_docs: {
			url: "https://github.com/grpc-ecosystem/grpc-gateway";
			description: "Find out more about EchoService";
		}
	};

    rpc List(ListRequest) returns (ListResponse){
		option (google.api.http) = {
			get: "/v1/signup"
		};
	}
    rpc Get(GetRequest) returns (google.protobuf.Empty){
		option (google.api.http) = {
			get: "/v1/signup/{id}"
		};
	}
}

message ListRequest {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "List Request"
            description: "Will return all Signups"
            required: ["api"]
        }
	};

	string api = 1;
}

message ListResponse {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "List Response"
            description: "Returns all Signups"
            required: ["api", "signups"]
        }
	};
	string api = 1;
    repeated oswee.signup.domain.v1.Signup signups = 2;
}

message GetRequest {
	option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "Get request"
            description: "Returns requested Signup"
            required: ["api", "id"]
        }
	};

	string api = 1;
    string id = 2;
}